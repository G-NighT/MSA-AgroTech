@startuml C2-main
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

left to right direction

title C2 — Платформа мониторинга скота (Kafka + MQTT, Edge-инференс)

' Акторы
Person(op, "Оператор фермы", "Реакция на события, подтверждение инцидентов")
Person(vet, "Ветврач/Зоотехник", "Анализ состояния животных")
Person(dir, "Директор хозяйства", "Сводная аналитика и KPI")
Person(analyst, "Аналитик", "Работа с BI/отчётами")
Person(mobile, "Мобильное приложение", "Уведомления, быстрые действия")

' Внешние системы
System_Ext(cam, "IP-камеры", "RTSP/ONVIF")
System_Ext(sensors, "Датчики/актуаторы", "кормушки, поилки, фильтры воды")
System_Ext(bi, "BI/ВИ-система", "Витрины/отчёты")
System_Ext(erp, "ERP", "REST/ETL: справочники/склад")
System_Ext(notif, "Сервис уведомлений", "SMS/Email/WebPush")

' Ферма / Edge
Boundary(edge, "Ферма / Edge") {
  Container(edgeAgent, "Агент фермы", "Сервис", "Видеоаналитика, управление устройствами, буфер, офлайн")
  Container(edgeRunner, "Model Runner (plugins)", "Сервис", "Запуск партнёрских моделей локально, gRPC/Unix-socket")
  Container(mqttLocal, "MQTT-брокер (локальный)", "MQTT", "Телеметрия/команды устройств")
  ContainerDb(edgeDb, "Локальная БД Edge", "SQLite/PostgreSQL", "Буфер событий/медиа, конфиги/ROI, версии моделей")
}

' Связи внешних устройств с Edge
Rel(cam, edgeAgent, "Live-видео", "RTSP/WebRTC (LAN)")
Rel(sensors, mqttLocal, "Телеметрия", "MQTT")
Rel(edgeAgent, mqttLocal, "Подписка/команды", "MQTT")
Rel(edgeAgent, edgeRunner, "Инференс по кадру/клипу", "gRPC / shared fs")
Rel(edgeAgent, edgeDb, "Чтение/запись", "SQL")

' Центральная платформа
Boundary(central, "Центральная платформа") {
  Container(api, "API Gateway", "Сервис", "REST/gRPC для веб/мобилы и интеграций; WS/SSE")
  Container(auth, "IAM/SSO", "Сервис", "OIDC/SAML; RBAC")
  Container(core, "Core: Платформа мониторинга", "Сервис", "Обработка событий, кейс-логика, оповещения")
  Container(deviceSvc, "Device Control Service", "Сервис", "Оркестрация команд к устройствам (через MQTT/Kafka)")
  Container(telemetrySvc, "Telemetry Service", "Сервис", "Агрегация метрик, экспорт базовых/кастомных метрик")
  Container(mediaSvc, "Media Service", "Сервис", "Генерация pre-signed URL, политика TTL для клипов/кадров")
  Container(configSvc, "Config/Feature Service", "Сервис", "Пороги моделей, ROI, фичфлаги по фермам")
  Container(reg, "Model Registry & Policy", "Сервис", "Реестр моделей, версии, политики выката, OTA-доставка")
  Container(kafka, "Kafka (шина событий)", "Kafka", "События, телеметрия, журналы, CDC")
  Container(object, "Объектное хранилище (S3)", "Хранилище", "Клипы/кадры/артефакты")
  ContainerDb(opdb, "Операционная БД", "PostgreSQL", "Инциденты, справочники, команды, outbox, конфиги")
  ContainerDb(tsdb, "Хранилище телеметрии", "Timescale/ClickHouse", "Временные ряды и агрегаты")
  Container(cache, "Redis (опционально)", "Redis", "Сессии WS/SSE, rate-limit, кэш ссылок")
}

' Связи Edge с Центром
Rel(edgeAgent, kafka, "Публикует события/телеметрию", "Kafka over TLS")
Rel(kafka, core, "Подписка на события", "Kafka consumer")

' Пользователи и API
Rel(op, api, "Веб-портал", "HTTPS")
Rel(mobile, api, "Мобильное приложение", "HTTPS")
Rel(api, auth, "Аутентификация/авторизация", "OIDC/OAuth2")
Rel(api, core, "Запросы UI/интеграций: инциденты, управление, отчёты", "REST/gRPC")
Rel(api, core, "Онлайновые обновления ленты", "WebSocket/SSE")

' Медиа
Rel(edgeAgent, object, "Отправляет клипы/кадры по событию", "S3 API (pre-signed)")
Rel(mediaSvc, object, "Создаёт pre-signed URL; управление TTL/политиками", "S3 SDK")
Rel(api, mediaSvc, "Запрос ссылок на артефакты", "REST")

' Команды/телеметрия
Rel(deviceSvc, kafka, "Команды/ответы устройств", "Kafka")
Rel(telemetrySvc, kafka, "Потоки телеметрии и экспорт", "Kafka")

' Данные и интеграции
Rel(core, opdb, "CRUD/запросы", "SQL")
Rel(telemetrySvc, tsdb, "Запись/чтение рядов", "SQL")
Rel(core, notif, "Оповещения", "HTTPS/WebPush")
Rel(core, erp, "Интеграции", "REST/ETL")
Rel(analyst, bi, "Аналитика и отчёты", "BI")
Rel(bi, object, "Доступ к данным/артефактам (по pre-signed URL)", "HTTPS")
Rel(dir, bi, "Дашборды KPI", "BI")

' Доставка моделей/конфигов
Rel(reg, edgeAgent, "OTA-доставка артефактов моделей,\nполитики выката (canary/по локациям)", "HTTPS/S3")
Rel(configSvc, edgeAgent, "Обновления порогов/ROI", "HTTPS/Kafka")

@enduml
